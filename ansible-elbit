#!/bin/bash

# Function to show usage
show_usage() {
  echo "Usage: ansible-elbit [--fresh | --edit] <package_path>"
  echo "--fresh: For installing the complete TinyPilot package including uStreamer, Janus, and all dependencies. Aimed for fresh RPi deployment."
  echo "--edit: Open the inventory.ini file for editing."
  echo "<package_path>: Path to the .deb package."
  exit 1
}

# Check if no arguments are provided
if [ $# -lt 1 ]; then
  show_usage
fi

FRESH_INSTALL_MODE=0
EDIT_INVENTORY=0
PACKAGE_PATH=""

# Parse arguments
while [[ "$#" -gt 0 ]]; do
  case $1 in
    --fresh) FRESH_INSTALL_MODE=1 ;;
    --edit) EDIT_INVENTORY=1 ;;
    *) PACKAGE_PATH=$(realpath "$1") ;;
  esac
  shift
done

# Edit inventory.ini if --edit flag is provided
if [ $EDIT_INVENTORY -eq 1 ]; then
  sudo nano /usr/local/ansible-deployment/inventory.ini
  exit 0
fi

# Check if PACKAGE_PATH is set
if [ -z "$PACKAGE_PATH" ]; then
  echo "Error: Package path is required."
  show_usage
fi

PACKAGE_NAME=$(basename "$PACKAGE_PATH")
PACKAGE_VERSION=$(echo "$PACKAGE_NAME" | sed -E 's/Elbit_TinyPilot_(.+)\.deb/\1/')

# Define the installation directory
INSTALL_DIR="/usr/local/ansible-deployment"

# Create the debs directory if it doesn't exist
sudo mkdir -p "$INSTALL_DIR/debs"

# Copy the package to the debs directory
sudo cp "$PACKAGE_PATH" "$INSTALL_DIR/debs/$PACKAGE_NAME"

# Navigate to the Ansible deployment directory
cd "$INSTALL_DIR" || { echo "Failed to change directory to $INSTALL_DIR"; exit 1; }

# Update the package name in the vars file
echo "package_name: $PACKAGE_NAME" | sudo tee vars/package.yml > /dev/null
echo "package_path: $PACKAGE_PATH" | sudo tee -a vars/package.yml > /dev/null

if [ $FRESH_INSTALL_MODE -eq 1 ]; then
  ansible-playbook -i inventory.ini playbooks/deploy.yml --tags never -vvv
else
  ansible-playbook -i inventory.ini playbooks/deploy.yml
fi

# Cleanup the temporary working directory
rm -rf "$WORKDIR"
